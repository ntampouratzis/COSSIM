//
// Generated file, do not edit! Created by nedtool 5.0 from myPacket.msg.
//

#ifndef __MYPACKET_M_H
#define __MYPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>myPacket.msg:3</tt> by nedtool.
 * <pre>
 * packet myPacket extends cPacket
 * {
 *     int sourceAddress;
 *     int destAddress;
 *     unsigned int length;
 *     uint64_t time;
 *     uint8_t Payload[2048];
 * }
 * </pre>
 */
class myPacket : public ::omnetpp::cPacket
{
  protected:
    int sourceAddress;
    int destAddress;
    unsigned int length;
    uint64_t time;
    uint8_t Payload[2048];

  private:
    void copy(const myPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const myPacket&);

  public:
    myPacket(const char *name=nullptr, int kind=0);
    myPacket(const myPacket& other);
    virtual ~myPacket();
    myPacket& operator=(const myPacket& other);
    virtual myPacket *dup() const {return new myPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getSourceAddress() const;
    virtual void setSourceAddress(int sourceAddress);
    virtual int getDestAddress() const;
    virtual void setDestAddress(int destAddress);
    virtual unsigned int getLength() const;
    virtual void setLength(unsigned int length);
    virtual uint64_t getTime() const;
    virtual void setTime(uint64_t time);
    virtual unsigned int getPayloadArraySize() const;
    virtual uint8_t getPayload(unsigned int k) const;
    virtual void setPayload(unsigned int k, uint8_t Payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const myPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, myPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MYPACKET_M_H

